!function($){var expressionLib=cfrequest.rulesEngineExpressions||{},renderFieldEndpoint=cfrequest.rulesEngineRenderFieldEndpoint||"",editFieldEndpoint=cfrequest.rulesEngineEditFieldEndpoint||"",context=cfrequest.rulesEngineContext||"global",RulesEngineCondition=function(){function RulesEngineCondition(a,b,c){this.$formControl=a,this.$ruleList=c,this.model=this.deserialize(this.$formControl.val()),this.expressions=b,this.fieldRenderCache={},this.selectedIndex=null,this.setupBehaviors(),this.render()}return RulesEngineCondition.prototype.persistToHiddenField=function(){this.$formControl.val(this.serialize())},RulesEngineCondition.prototype.serialize=function(){return this.model.length?JSON.stringify(this.model):""},RulesEngineCondition.prototype.deserialize=function(a){if(this.isValidSerializedCondition(a))try{return JSON.parse(a)}catch(a){}return[]},RulesEngineCondition.prototype.isValidSerializedCondition=function(a){return"string"==typeof a&&0!==$.trim(a).length},RulesEngineCondition.prototype.render=function(){var a,b,c,d,e=this;for(c=function(a,b,d){var f,g,h,i,j=[],k='<li class="rules-engine-condition-builder-expression"></li>',l='<span class="rules-engine-condition-builder-expression-actions"></span>',m=30*b;for(h=0;h<a.length;h++){var n=h%2,o=a[h],i=d.concat([h]);n?(f=$(k),f.data("modelIndex",i),f.html('<span class="rules-engine-condition-builder-expression-text" style="margin-left:'+m+'px;"><a class="rules-engine-condition-builder-join-toggle">'+i18n.translateResource("cms:rulesEngine.join."+o)+"</a></span>"),f.addClass("rules-engine-condition-builder-expression-join"),j.push(f)):Array.isArray(o)?j=j.concat(c(o,b+1,i)):(f=$(k),f.data("modelIndex",i),f.html(e.renderExpression(o,b)),g=$(l),f.append(g),h<a.length-1&&g.append('<a class="fa fa-fw fa-arrow-down rules-engine-condition-builder-expression-move-down"></a>'),h&&g.append('<a class="fa fa-fw fa-arrow-up rules-engine-condition-builder-expression-move-up"></a>'),b&&g.append('<a class="fa fa-fw fa-arrow-left rules-engine-condition-builder-expression-move-unindent"></a>'),h&&g.append('<a class="fa fa-fw fa-arrow-right rules-engine-condition-builder-expression-move-indent"></a>'),g.append('<a class="fa fa-fw fa-trash rules-engine-condition-builder-expression-delete"></a>'),null!==e.selectedIndex&&e.selectedIndex.join()===i.join()&&f.addClass("selected"),j.push(f))}return j},a=c(this.model,0,[]),this.$ruleList.html(""),d=0;d<a.length;d++)this.$ruleList.append(a[d]),a[d].hasClass("selected")&&(b=a[d],b.removeClass("selected"));b&&this.selectExpression(b)},RulesEngineCondition.prototype.addExpression=function(a){var b=this.newExpression(a);this.model.length&&this.model.push("and"),this.model.push(b),this.selectedIndex=[this.model.length-1],this.persistToHiddenField(),this.render()},RulesEngineCondition.prototype.newExpression=function(a){var b,c=this.getExpression(a);if(null===c)return{};b={expression:c.id,fields:{}};for(fieldName in c.fields)"undefined"==typeof c.fields[fieldName].default?b.fields[fieldName]=null:b.fields[fieldName]=c.fields[fieldName].default;return b},RulesEngineCondition.prototype.getExpression=function(a){var b,c;for(b=this.expressions.length-1;b>=0;b--)if(c=this.expressions[b],c.id.toLowerCase()===a.toLowerCase())return c},RulesEngineCondition.prototype.renderExpression=function(a,b){var c,d,e,f,g,h=this.getExpression(a.expression),i=h.text||"",j=30*b,k=$('<span class="rules-engine-condition-builder-expression-text" style="margin-left:'+j+'px;"></span>');if("undefined"==typeof h.id)return"";for(c in a.fields)e=new RegExp("{"+c+"}","gi"),i=i.replace(e,'<span class="rules-engine-condition-builder-field" data-field-name="'+c+'"></span>');k.html(i);for(c in a.fields)d=a.fields[c],g=k.find("[data-field-name="+c+"]"),f=h.fields[c]||{},g.data("fieldDefinition",f),g.data("fieldValue",d),this.renderField(c,d,f,g,a.fields);return k},RulesEngineCondition.prototype.renderField=function(a,b,c,d,e){var f=JSON.stringify({fieldName:a,fieldValue:b,fieldDefinition:c});null!==b?(d.addClass("rules-engine-condition-builder-field-loading").html("&hellip;"),this.fieldRenderCache[f]||(this.fieldRenderCache[f]=$.post(renderFieldEndpoint,$.extend({},{fieldValue:b},c))),this.fieldRenderCache[f].done(function(a){d.html('<a class="rules-engine-condition-builder-field-link">'+a+"</a>")})):d.html('<a class="rules-engine-condition-builder-field-link">'+c.defaultLabel+"</a>"),"boolean"!==c.fieldType&&this.setupFieldEditModal(a,b,c,d,e)},RulesEngineCondition.prototype.setupFieldEditModal=function(a,b,c,d,e){var f,g,h,i=this,j=editFieldEndpoint,k=j.search(/\?/)==-1?"?":"&";f={onLoad:function(a){a.rulesEngineCondition=i,a.$field=d,a.modal=h,d.data("editIframe",a)},onShow:function(a,b){a.on("hidden.bs.modal",function(b){a.remove()})}},g={title:i18n.translateResource("cms:rulesEngine.configure.field.modal.title"),className:"full-screen-dialog limited-size",buttons:{cancel:{label:'<i class="fa fa-reply"></i> '+i18n.translateResource("cms:cancel.btn"),className:"btn-default"},ok:{label:'<i class="fa fa-check"></i> '+i18n.translateResource("cms:ok.btn"),className:"btn-primary",callback:function(){return i.submitFieldDialog(d)}}}},j+=k+$.param($.extend({},e,{fieldValue:b,context:context},c)),h=new PresideIframeModal(j,"100%","100%",f,g),d.data("editModal",h)},RulesEngineCondition.prototype.saveFieldValue=function(a,b){var c=a.data("editIframe").modal,d=a.closest(".rules-engine-condition-builder-expression"),e=this.getModelReferenceFromIndex(d.data("modelIndex")),f=a.data("fieldName");e.fields[f]=b,this.persistToHiddenField(),this.render(),c.close()},RulesEngineCondition.prototype.submitFieldDialog=function(a){var b=a.data("editIframe");return"undefined"==typeof b.rulesEngineDialog||(b.rulesEngineDialog.submitForm(),!1)},RulesEngineCondition.prototype.setupBehaviors=function(){var a=this;this.$ruleList.on("click",".rules-engine-condition-builder-join-toggle",function(b){b.preventDefault(),a.selectedIndex=null,a.toggleJoin($(this))}),this.$ruleList.on("click",".rules-engine-condition-builder-expression:not(.rules-engine-condition-builder-expression-join)",function(b){b.preventDefault(),$(b.target).is("a")||a.selectExpression($(this))}),this.$ruleList.on("click",".rules-engine-condition-builder-field-link",function(b){b.preventDefault(),a.selectExpression($(this).closest(".rules-engine-condition-builder-expression")),a.processFieldClick($(this))}),this.$ruleList.on("click",".rules-engine-condition-builder-expression-delete",function(b){b.preventDefault(),a.processDeleteExpressionClick($(this))}),this.$ruleList.on("click",".rules-engine-condition-builder-expression-move-up",function(b){b.preventDefault(),a.processMoveExpressionClick($(this),"up")}),this.$ruleList.on("click",".rules-engine-condition-builder-expression-move-down",function(b){b.preventDefault(),a.processMoveExpressionClick($(this),"down")}),this.$ruleList.on("click",".rules-engine-condition-builder-expression-move-indent",function(b){b.preventDefault(),a.processIndentExpressionClick($(this),"indent")}),this.$ruleList.on("click",".rules-engine-condition-builder-expression-move-unindent",function(b){b.preventDefault(),a.processIndentExpressionClick($(this),"unindent")})},RulesEngineCondition.prototype.getModelIndexString=function(a){var b,c="this.model";if(a.length){for(c+="[",b=0;b<a.length;b++)c+=a[b],b<a.length-1&&(c+="][");c+="]"}return c},RulesEngineCondition.prototype.toggleJoin=function($clickedJoin){var $li=$clickedJoin.closest(".rules-engine-condition-builder-expression"),modelIndexString,currentValue,newValue;$li.length&&(modelIndexString=this.getModelIndexString($li.data("modelIndex")),currentValue=eval(modelIndexString),newValue="and"===currentValue?"or":"and",eval(modelIndexString+' = "'+newValue+'"'),this.persistToHiddenField(),this.render())},RulesEngineCondition.prototype.processFieldClick=function(a){var b,c,d,e,f,g=a.closest(".rules-engine-condition-builder-field");g.length&&(b=g.closest(".rules-engine-condition-builder-expression"),f=this.getModelReferenceFromIndex(b.data("modelIndex")),c=g.data("fieldDefinition"),d=g.data("fieldName"),e=g.data("fieldValue"),fieldType=c.fieldType,"boolean"===fieldType?(f.fields[d]=!f.fields[d],this.persistToHiddenField(),this.render()):g.data("editModal").open())},RulesEngineCondition.prototype.processDeleteExpressionClick=function(a){var b=a.closest(".rules-engine-condition-builder-expression"),c=b.data("modelIndex");this.deleteExpression(c)},RulesEngineCondition.prototype.deleteExpression=function(a){var b,c,d=a[a.length-1];a.length>1?(b=a.slice(0,a.length-1),c=this.getModelReferenceFromIndex(b)):c=this.model,c.splice(d,1),c.length&&(0===d?c.splice(d,1):c.splice(d-1,1)),!c.length&&a.length>1&&this.deleteExpression(b),this.persistToHiddenField(),this.render()},RulesEngineCondition.prototype.getModelReferenceFromIndex=function(index){return eval(this.getModelIndexString(index))},RulesEngineCondition.prototype.selectExpression=function(a){var b="rules-engine-condition-builder-expression-selected",c=a.hasClass(b);this.$ruleList.find(".rules-engine-condition-builder-expression").removeClass("rules-engine-condition-builder-expression-selected"),c||(a.addClass(b),this.selectedIndex=a.data("modelIndex"))},RulesEngineCondition.prototype.processMoveExpressionClick=function(a,b){var c=a.closest(".rules-engine-condition-builder-expression"),d=c.data("modelIndex");this.moveExpression(d,b)},RulesEngineCondition.prototype.moveExpression=function(a,b){var c,d,e,f=a[a.length-1],g="up"==b?f-2:f+2;a.length>1?(c=a.slice(0,a.length-1),d=this.getModelReferenceFromIndex(c)):d=this.model,g>=0&&g<d.length&&(e=d[g],d[g]=d[f],d[f]=e,this.selectedIndex=a,this.selectedIndex[this.selectedIndex.length-1]=g,this.persistToHiddenField(),this.render())},RulesEngineCondition.prototype.processIndentExpressionClick=function(a,b){var c=a.closest(".rules-engine-condition-builder-expression"),d=c.data("modelIndex");"indent"==b?this.indentExpression(d):this.unIndentExpression(d)},RulesEngineCondition.prototype.indentExpression=function(a){var b,c,d,e,f,g=a[a.length-1];if(a.length>1?(b=a.slice(0,a.length-1),c=this.getModelReferenceFromIndex(b)):c=this.model,g){for(d=c[g],c[g]=[],c[g].push(d),f=c.length,e=g+1;e<f;e++)c[g].push(c[e]);for(e=f-1;e>g;e--)c.splice(e,1);this.selectedIndex=a,this.selectedIndex.push(0),this.persistToHiddenField(),this.render()}},RulesEngineCondition.prototype.unIndentExpression=function(a){var b,c,d,e,f,g,h,i,j=a[a.length-1];if(a.length){for(e=a.slice(0,a.length-1),g=e.slice(0,e.length-1),f=this.getModelReferenceFromIndex(e),h=this.getModelReferenceFromIndex(g),d=e[e.length-1],parentLength=f.length,b=j?j-1:0,c=j?d+1:d,i=b;i<parentLength;i++)console.log(f[i]),h.splice(c,0,f[i]),c++,j||d++;for(i=parentLength-1;i>=b;i--)f.splice(i,1);f.length||h.splice(d,1),this.persistToHiddenField(),this.render()}},RulesEngineCondition}();$.fn.rulesEngineConditionBuilder=function(){return this.each(function(){var a,b,c,d,e,f,g,h,i=$(this),j=i.next("div.rules-engine-condition-builder"),k=j.find(".rules-engine-condition-builder-expression-search"),l=j.find(".rules-engine-condition-builder-expressions-list"),m=j.find(".rules-engine-condition-builder-condition-pane"),n=j.find(".rules-engine-condition-builder-rule-list"),o=l.find("> li"),p=(i.attr("tabindex"),i.val(),expressionLib[i.attr("id")]||[]);d=function(){var d=i.attr("id"),g=i.attr("name"),h=(i.attr("tabindex"),i.val());j.removeClass("hide"),k.on("keyup",c),a=$('<input type="hidden">'),a.val(h),a.attr("name",g),i.after(a),i.remove(),a.attr("id",d),b=new RulesEngineCondition(a,p,n),e(),f()},e=function(){o.each(function(){var a=$(this);a.data("originalText",a.text())})},c=function(){var a=k.val();o.each(function(){var b=$(this),c=b.data("originalText");a.length?c.toLowerCase().includes(a.toLowerCase())?(b.removeClass("hide"),b.html(c.replace(new RegExp(a,"gi"),function(a){return"<b>"+a+"</b>"}))):b.addClass("hide"):(b.removeClass("hide"),b.html(c))})},f=function(){o.draggable({helper:"clone"}),m.droppable({accept:o,drop:g,hoverClass:"ui-droppable-hover"})},g=function(a,c){var d=c.draggable.clone();b.addExpression(d.data("id"))},h=function(){},d()})},$("textarea.rules-engine-condition-builder").rulesEngineConditionBuilder()}(presideJQuery);
//# sourceMappingURL=_rulesEngineConditionBuilder.min.map